#!/usr/bin/env python3
import sys
import os 


INFILE = open(sys.argv[1],"r")
#We read all reacords from the input file
INPUTlist = INFILE.read().splitlines()
INFILE.close()
LIICTYP   = str(INPUTlist[0])
#From the file generated by the bash script we read directly the parameter. 
#After the first run of the bash script they can be modified directly from the file
outname   = str(INPUTlist[1])
nsinglet  = int(INPUTlist[2])
ntriplet  = int(INPUTlist[3])
CALCULATIONTYP  = str(INPUTlist[4])

if CALCULATIONTYP == "D1":
   d1file = "d1_values"

if LIICTYP == "RIGIDSCAN":
  NEWoutfile = open(outname + "_new",'w')
  NPOINT = int(INPUTlist[5])
  xlabel = str(INPUTlist[6]) + ' ({\\305})'
  xmin   = float(INPUTlist[7])
  xmax   = float(INPUTlist[8])
  skipped = 0
  for i, line in enumerate(open(outname,'r')):
    line = line.split()
    try:  			#in the first line we want skip the state labels
       float(line [0])
#We simply sobstitute the first column with liic coordinate with the actual values 
#of the geometrical coordinates 
       line [0] = xmin + (xmax - xmin) * float(i - skipped) / NPOINT  
       for linevalue in line: 
          NEWoutfile.write("%9.5f    "  %(float(linevalue)))
       NEWoutfile.write("\n")
    except ValueError:
      skipped =+ 1 
  outname = outname + "_new"
  if CALCULATIONTYP == "D1":
     NEWd1file  = open(d1file + "_new", "w")
     for i, line in enumerate(open(d1file,'r')):
       line = line.split()
       line [0] = xmin + (xmax - xmin) * float(i) / NPOINT
       for linevalue in line:
           NEWd1file.write("%9.5f    "  %(float(linevalue)))
       NEWd1file.write("\n")
     d1file = d1file + "_new"
else:
  xlabel = "LIIC coordinate"

#Palette of color for singlets and triplets states. Shade of Blue and Green max 5 states
shadeofblue  = ["#C6DBEF","#9ECAE1","#4292C6","#2171B5","#084594"]
shadeofgreen = ["#C7E9C0","#A1D99B","#41AB5D","#238B45","#005A32"]

gnustring  = ''
gnustring += 'set terminal pngcairo enhanced dashed font "Helvetica,28.0" size 1500,1200\n'
gnustring += 'set output "%s.png"\n\n'                  %(outname)
gnustring += 'set xlabel "%s"\n'			%(xlabel)

keyposition = "outside"
if CALCULATIONTYP == "D1":
  keyposition = "left"
  gnustring  += 'set lmargin at screen 0.11\nset rmargin at screen 0.86\nset multiplot\n'

gnustring += '  set ytics nomirror\n  set key %s\n  set ylabel "Relative Energy (eV)"\n  set yrange[0:10]\n' %(keyposition)
gnustring += '  set title offset 0,-0.8\n'

gnustring += '  plot  "%s" ' %(outname)

for i in range(nsinglet):
  if i < 5:
    gnustring += ' u 1:%i title "S_%i" lw %3.1f lt 1 lc rgb "%s" w l'    %(i+2,i,6.0,shadeofblue[i])  
#If we have more state included in the SA without particular interest
#i.e. nsinglet < ALLSSTATE we print the extra states in grey
  else:
    gnustring += ' u 1:%i notitle lw %3.1f lt 1 lc rgb "#E6E2E2" w l'    %(i+2,6.0)

#If triplet are not present and we are printing until the last singlet state we need to add at line end ,\
  if i < nsinglet - 1 or ntriplet > 0 :
    gnustring += '  ,\\\n   ""'

for i in range(ntriplet):
  gnustring += ' u 1:%i title "T_%i" lw %3.1f lt 1 lc rgb "%s" w l'    %(nsinglet+2+i,i+1,6.0,shadeofgreen[i]) 
  if (i < ntriplet - 1) :
    gnustring += '  ,\\\n   ""'

gnustring += '\n\n'
if CALCULATIONTYP == "D1":
  gnustring += '  set xtics format " "\n  unset ylabel\n  unset yrange\n  unset ytics\n\n'
  gnustring += '  set y2range[0:0.1]\n  set y2label "D_1 Diagnostic"\n  set y2tics\n  set key right\n'
  gnustring += '  plot "%s" u 1:2 title "D_1 Diagnostic" lw 5.0 lt 2 lc rgb "grey" axes x1y2 w l' %(d1file)

print (gnustring)


